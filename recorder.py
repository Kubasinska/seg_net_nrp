import numpy as np
import cv2
import rospy
from cv_bridge import CvBridge
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import time
import glob
import requests
import zipfile
import os
import threading
import pickle

"""
This script registers and saves the output of the prednet_segmentation
 topics. How to use this script: 
 (1) Run ros_img_segmentation.py 
 (2) run this script 
 (3) Send something to "/camera/camera/image" 
 (4) wait for REGISTER_FOR_SECONDS. 
 
 
 This script saves a pickle file "dumped.pkl", a dictionary where the keys 
 are the prednet_segmentation topics, and the values are a list with all 
 the masks generated by each prednet_segmentation topic. 
 This script is pretty useful if you want to explore the output masks. 
"""

rospy.init_node("tester")
cam_topic="/camera/camera/image"
pub = rospy.Publisher(cam_topic, Image, queue_size=10)
cv_bridge = CvBridge()

REGISTER_FOR_SECONDS = 300

def collect_topic_message(topic):
    count = 0
    while True:
        global stop_threads
        if stop_threads:
            break
        try:
            msg = rospy.wait_for_message(topic, Image, 5)
            topics_msgs[topic].append(msg)
            count += 1
            print(topic, count)
        except:
            pass

stop_threads = False
threads = list()
topics_msgs = dict()
for topic in rospy.get_published_topics():
    if "prednet_segmentation" in topic[0]:
        topics_msgs[topic[0]] = list()
        th = threading.Thread(target=collect_topic_message, args=(topic[0],), daemon=True)
        th.start()
        threads.append(th)

time.sleep(REGISTER_FOR_SECONDS)
stop_threads = True

with open("dumped.pkl", "wb") as file:
    pickle.dump(topics_msgs,file)
