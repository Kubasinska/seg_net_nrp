import numpy as np
import cv2
from cv_bridge import CvBridge
import os
import pickle
import matplotlib
matplotlib.use("TkAgg")
import matplotlib.pyplot as plt


"""
Given a dumped.pkl file generated by recorder.py and the test_images fodler, 
this script create a series of image that show: the actual input of the net and the output mask.  
"""

with open("dumped.pkl", "rb") as file:
    data = pickle.load(file)

cv_bridge = CvBridge()
imgs_paths = sorted([os.path.join("/workspace/test_images", filename) for filename in os.listdir("/workspace/test_images")])
imgs = fake_imgs = [np.ones((320, 320, 3)).astype(np.uint8) for i in range(15)] + [cv2.cvtColor(cv2.imread(f),
                                                                                                cv2.COLOR_BGR2RGB) for f in imgs_paths]
masks = {key:[cv_bridge.imgmsg_to_cv2(m) for m in value] for key, value in data.items()}


for n in range(len(imgs)):
    f, axarr = plt.subplots(1,4)
    axarr[0].imshow(imgs[n])
    axarr[1].imshow(cv2.bitwise_and(imgs[n],
                                    imgs[n],
                                    mask = np.round(masks["/prednet_segmentation/sugar_box/image"][n]).astype(np.uint8)))
    axarr[2].imshow(cv2.bitwise_and(imgs[n],
                                    imgs[n],
                                    mask = np.round(masks["/prednet_segmentation/plate/image"][n]).astype(np.uint8)))
    axarr[3].imshow(cv2.bitwise_and(imgs[n],
                                    imgs[n],
                                    mask = np.round(masks["/prednet_segmentation/tomato_soup_can/image"][n]).astype(np.uint8)))
    f.savefig("masks/" + str(n) + ".png", dpi=200)